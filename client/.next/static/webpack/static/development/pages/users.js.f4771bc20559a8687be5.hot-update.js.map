{"version":3,"file":"static/webpack/static/development/pages/users.js.f4771bc20559a8687be5.hot-update.js","sources":["webpack:///./components/tableToolbar.js"],"sourcesContent":["// routing\nimport Link from 'next/link'\n// material-ui components\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport { withStyles } from '@material-ui/core/styles';\n// material-ui icons\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n});\n\nclass TableToolbar extends React.Component {\n  state = {\n    anchorEl: null,\n    mobileMoreAnchorEl: null,\n  };\n\n  handleMenuClose = () => {\n    this.setState({ anchorEl: null });\n    this.handleMobileMenuClose();\n  };\n\n  handleMobileMenuOpen = event => {\n    this.setState({ mobileMoreAnchorEl: event.currentTarget });\n  };\n\n  handleMobileMenuClose = () => {\n    this.setState({ mobileMoreAnchorEl: null });\n  };\n\n  render() {\n    const { anchorEl, mobileMoreAnchorEl } = this.state;\n    const { classes, selectedUsers, searchTerm, setSearchTerm, handleDelete } = this.props;\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n    /* MOBILE CRUD MENU */\n    const renderMobileMenu = (selectedUsers) => (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={this.handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton color=\"inherit\">\n            <PersonAddIcon />\n          </IconButton>\n          <p>Add</p>\n        </MenuItem>\n        {selectedUsers.length === 1 ?\n          <MenuItem>\n            <IconButton color=\"inherit\">\n              <EditIcon />\n            </IconButton>\n            <p>Edit</p>\n          </MenuItem> : ''\n        }\n        {selectedUsers.length >= 1 ?\n          <MenuItem>\n            <IconButton color=\"inherit\">\n              <DeleteIcon />\n            </IconButton>\n            <p>Delete</p>\n          </MenuItem> : ''\n        }\n      </Menu>\n    );\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\n              W3-Users\n            </Typography>\n            {/* NAME FILTER INPUT */}\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase /* search how to handle onSubmit */\n                placeholder=\"Search by nameâ€¦\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n              />\n            </div>\n            <div className={classes.grow} />\n            {/* DESKTOP CRUD ICONS*/}\n            <div className={classes.sectionDesktop}>\n              <Link href={`userCrud`}\n                as={`/user/create`}>\n                <IconButton color=\"inherit\">\n                  <PersonAddIcon />\n                </IconButton>\n              </Link>\n              {selectedUsers.length === 1 ?\n                <Link href={`/user/userCrud?id=${selectedUsers[0]}`}\n                  as={`/user/edit/${selectedUsers[0]}`}>\n                  <IconButton color=\"inherit\">\n                    <EditIcon />\n                  </IconButton>\n                </Link> : ''\n              }\n              {selectedUsers.length >= 1 ?\n                <IconButton color=\"inherit\" onClick={(e) => handleDelete(selectedUsers)}>\n                  <DeleteIcon />\n                </IconButton> : ''\n              }\n            </div>\n            <div className={classes.sectionMobile}>\n              <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                <MoreIcon />\n              </IconButton>\n            </div>\n          </Toolbar>\n        </AppBar>\n        {renderMobileMenu(selectedUsers)}\n      </div>\n    );\n  }\n}\n\nTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TableToolbar);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AATA;AAWA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAIA;AACA;AADA;AAGA;AADA;AAtDA;AAAA;AACA;AA2DA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AALA;AAQA;AAAA;AAOA;AAAA;AAQA;AAAA;AAxBA;AACA;AAgCA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAJA;AAUA;AAAA;AAEA;AAAA;AACA;AACA;AADA;AAEA;AAAA;AAKA;AACA;AADA;AAEA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;;;;AAlHA;AACA;AAoHA;AACA;AADA;AAIA;;;;A","sourceRoot":""}